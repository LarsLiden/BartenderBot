/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
export declare enum ReplayErrorType {
    ActionUndefined = "ActionUndefined",
    EntityUndefined = "EntityUndefined",
    EntityEmpty = "EntityEmpty",
    ActionUnavailable = "ActionUnavailable",
    EntityDiscrepancy = "EntityDiscrepancy",
    ActionAfterWait = "ActionAfterWait",
    TwoUserInputs = "TwoUserInputs",
    InputAfterNonWait = "InputAfterNonWait",
}
export declare class ReplayError {
    type: ReplayErrorType;
    constructor(type: ReplayErrorType);
}
export declare class ReplayErrorActionUndefined extends ReplayError {
    lastUserInput: string;
    constructor(lastUserInput: string);
}
export declare class ReplayErrorEntityUndefined extends ReplayError {
    value: string;
    constructor(value: string);
}
export declare class ReplayErrorEntityEmpty extends ReplayError {
    values: string[];
    constructor(values: string[]);
}
export declare class ReplayErrorActionUnavailable extends ReplayError {
    lastUserInput: string;
    constructor(lastUserInput: string);
}
export declare class ReplayErrorEntityDiscrepancy extends ReplayError {
    lastUserInput: string;
    originalEntities: string[];
    newEntities: string[];
    constructor(lastUserInput: string, originalEntities: string[], newEntities: string[]);
}
export declare class ReplayErrorActionAfterWait extends ReplayError {
    constructor();
}
export declare class ReplayErrorTwoUserInputs extends ReplayError {
    constructor();
}
export declare class ReplayErrorInputAfterNonWait extends ReplayError {
    constructor();
}
