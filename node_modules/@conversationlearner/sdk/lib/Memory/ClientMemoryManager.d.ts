/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
import { SessionInfo } from '../Memory/BotState';
import { EntityBase, MemoryValue, FilledEntity, FilledEntityMap } from '@conversationlearner/models';
export declare class ClientMemoryManager {
    protected allEntities: EntityBase[];
    private sessionInfo;
    prevMemories: FilledEntityMap;
    curMemories: FilledEntityMap;
    constructor(prevMemories: FilledEntityMap, curMemories: FilledEntityMap, allEntities: EntityBase[], sessionInfo: SessionInfo);
    private FindEntity(entityName);
    RememberEntity(entityName: string, entityValue: string | number | object): void;
    RememberEntities(entityName: string, entityValues: string[]): void;
    ForgetEntity(entityName: string, value?: string | null): void;
    /** Clear all entity values apart from any included in the list of saveEntityNames
     * Useful in the "onSessionEndCallback" to preserve a subset of entities for the next session
     */
    ForgetAllEntitiesAsync(saveEntityNames: string[]): void;
    CopyEntity(entityNameFrom: string, entityNameTo: string): void;
    EntityValue(entityName: string): string | null;
    PrevEntityValue(entityName: string): (string | null);
    EntityValueAsPrebuilt(entityName: string): MemoryValue[];
    PrevEntityValueAsPrebuilt(entityName: string): MemoryValue[];
    EntityValueAsList(entityName: string): string[];
    PrevEntityValueAsList(entityName: string): string[];
    EntityValueAsNumber(entityName: string): number | null;
    PrevValueAsNumber(entityName: string): number | null;
    EntityValueAsBoolean(entityName: string): boolean | null;
    PrevValueAsBoolean(entityName: string): boolean | null;
    EntityValueAsObject<T>(entityName: string): T | null;
    PrevEntityValueAsObject<T>(entityName: string): (T | null);
    GetFilledEntitiesAsync(): FilledEntity[];
    SessionInfo(): SessionInfo;
}
