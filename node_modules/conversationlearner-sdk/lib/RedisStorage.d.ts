/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
import { Storage, StoreItems } from 'botbuilder';
/** Additional settings for configuring an instance of RedisStorage */
export interface RedisStorageSettings {
    /** Redis server. */
    server: string;
    /** Storage access key. */
    key: string;
    /** Port. */
    port?: number;
}
export declare class RedisStorage implements Storage {
    private redisClient;
    private _get;
    private _set;
    private _del;
    constructor(settings: RedisStorageSettings);
    /**
     * Loads store items from storage
     *
     * @param keys Array of item keys to read from the store.
     */
    read(keys: string[]): Promise<StoreItems>;
    /**
     * Saves store items to storage.
     *
     * @param changes Map of items to write to storage.
     */
    write(changes: StoreItems): Promise<void>;
    /**
     * Removes store items from storage
     *
     * @param keys Array of item keys to remove from the store.
     */
    delete(keys: string[]): Promise<void>;
    private promisify(func);
}
